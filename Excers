
                                                                                                  TA 7 c) 



let rec reverse a c = 
  if a < 1 then c 
  else reverse (a/10) (c*10 + a mod 10 ) ;;
  

let isPalindrome b = reverse b 0 = b ;; 

isPalindrome 1221


                                                                                                   TA 7 d)

let effPower x n m =
                let rec effPower' x n  a = 
                    if n = 0 then a mod m else effPower' (x) (n-1)  (a mod m *x) 
                in effPower'  (x mod m) n  1

                                                                                                  E0 11.
                                                                                             

let rec check (x: int) : bool =
  if x = 0 then true else
    let y = square x in
    let z = square' x in
    if y = z then check (x - 1) else false
